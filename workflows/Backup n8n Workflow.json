{
  "active": false,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 12 hours": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-07-03T06:27:14.573Z",
  "id": "VGKRwBwdcEywzcnP",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Backup n8n Workflow",
  "nodes": [
    {
      "parameters": {},
      "id": "744f8062-3761-468a-8df2-a1f968cc24bb",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -985,
        455
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
          "mode": "name"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "1a01a4ae-2772-410d-ac6b-d0ee95ed9cef",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        -140,
        420
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "HuELxxqebt3bkI4X",
          "name": "GitHub - patrickdass93"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "3c58b319-cef7-4a65-be7b-675b9ad8ff49",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        500,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "a5284ba1-6d8b-4f1c-bacb-ae7ef60fb261",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        740,
        360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "e7363730-ed16-43da-8dab-9ee851583b02",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        740,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "54398465-9387-464b-8430-e0d45759f2f2",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        740,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "8e879c34-e711-45eb-82ad-dcb33c373f5d",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        920,
        560
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "HuELxxqebt3bkI4X",
          "name": "GitHub - patrickdass93"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "35ec4a71-d926-4c4a-9a8e-7a389349c873",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        920,
        740
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "HuELxxqebt3bkI4X",
          "name": "GitHub - patrickdass93"
        }
      }
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "d3ec3333-5f22-46bd-9413-77b7f53d694c",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -360,
        580
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "patrickdass93"
            },
            {
              "name": "repo.name",
              "value": "n8n-backups"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "9b85ea43-0fce-46eb-b80c-8f9477ad25a6",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -800,
        580
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 12
            }
          ]
        }
      },
      "id": "717ec4d5-e901-4e08-944e-a9dcd20c0c54",
      "name": "Every 12 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -985,
        715
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
        "height": 464.79920462713443,
        "width": 389.78906250000017
      },
      "id": "7b4bf781-71ef-4df8-833a-219f4886e3d0",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1440,
        360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "e5b0bd32-39c9-408e-906d-78c5528c5d56",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -380,
        300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "ea0dedb2-f678-424c-bda7-d90d93750dca",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        460,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "caaa70d3-0ca5-4412-953d-8fda4ec65dea",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -600,
        580
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "Ry9flJ1M5UZ5UNak",
          "name": "n8n - patrickdass"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "ec1540d9-be62-48b7-a9cd-ba57ed29dfba",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        260,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "b9450fe5-dea3-41fe-9d46-f621364f80a9",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        80,
        560
      ],
      "typeVersion": 2
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 300,
    "errorWorkflow": "Jq1jjQrEpBG7dqHJ"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-07-03T08:21:45.000Z",
  "versionId": "f10c1f0a-e30d-47d4-a6d2-e7f771e727eb"
}